import numpy as np
import cv2
import os
import json
import theano
import lasagne
import theano.tensor as T
import sys
import glob
import glob, os


test = '/home/anshul/innomania.com/public/current_work/*'
r = glob.glob(test)
for i in r:
   os.remove(i)

test = '/home/anshul/innomania.com/public/output_files/*'
r = glob.glob(test)
for i in r:
   os.remove(i)

img=cv2.imread(sys.argv[1])
name  = sys.argv[1].split('/')[-1]
cv2.imwrite('/home/anshul/innomania.com/public/current_work/'+name,img)
img=cv2.resize(img,(28,28))
img = img.reshape(-1,1,28,28)

"""Defining Model"""
input_var = T.tensor4('inputs')
l_in = lasagne.layers.InputLayer(shape=(None, 1, 28, 28),input_var=input_var)
l_in_drop = lasagne.layers.DropoutLayer(l_in, p=0.2)
l_hid1 = lasagne.layers.DenseLayer(l_in_drop, num_units=800,nonlinearity=lasagne.nonlinearities.rectify,W=lasagne.init.GlorotUniform())
l_hid1_drop = lasagne.layers.DropoutLayer(l_hid1, p=0.5)
l_hid2 = lasagne.layers.DenseLayer(l_hid1_drop, num_units=800,nonlinearity=lasagne.nonlinearities.rectify)
l_hid2_drop = lasagne.layers.DropoutLayer(l_hid2, p=0.5)
l_out = lasagne.layers.DenseLayer(l_hid2_drop, num_units=10,nonlinearity=lasagne.nonlinearities.softmax)

classes =[]#Load your classes here

with np.load('/home/anshul/innomania.com/public/python_files/modelmlp.npz') as f:
    param_values = [f['arr_%d' % i] for i in range(len(f.files))]
    lasagne.layers.set_all_param_values(l_out, param_values)
result= lasagne.layers.get_output(l_out,img)
result=result.eval()
maxx = -1
index=-1;
k=-1;
for x in result[0]:
    k+=1
    if maxx<x:
    	maxx=x
        index = k
        pass
    pass
f = open('/home/anshul/innomania.com/public/output_files/output_class.txt', 'wb');
f.write(str(maxx)+':'+str(k));
f.close();
print (str(maxx)+":"+str(k))
